import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { InnerTubeContext } from "./innertube_context.js";
export declare const protobufPackage = "youtube.api.pfiinnertube";
export interface WatchNextRequest {
    context?: InnerTubeContext | undefined;
    videoId?: string | undefined;
    playlistId?: string | undefined;
    params?: string | undefined;
    continuation?: string | undefined;
    isAdPlayback?: boolean | undefined;
    mdxUseDevServer?: boolean | undefined;
    referrer?: string | undefined;
    referringApp?: string | undefined;
    adParams?: string | undefined;
    requestMusicSequence?: boolean | undefined;
    enableMdxAutoplay?: boolean | undefined;
    isMdxPlayback?: boolean | undefined;
    racyCheckOk?: boolean | undefined;
    contentCheckOk?: boolean | undefined;
    isAudioOnly?: boolean | undefined;
    autonavEnabled?: boolean | undefined;
    enablePersistentPlaylistPanel?: boolean | undefined;
    playlistSetVideoId?: string | undefined;
    showRuInvalidTokenMessage?: boolean | undefined;
    serializedThirdPartyEmbedConfig?: string | undefined;
    showContentOwnerOnly?: boolean | undefined;
    isEmbedPreview?: boolean | undefined;
    lastScrubbedInlinePlaybackVideoId?: string | undefined;
    lastAudioTurnedOnInlinePlaybackVideoId?: string | undefined;
    lastAudioTurnedOffInlinePlaybackVideoId?: string | undefined;
    captionsRequested?: boolean | undefined;
    queueContextParams?: Uint8Array | undefined;
    showShortsOnly?: boolean | undefined;
}
export declare const WatchNextRequest: MessageFns<WatchNextRequest>;
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export interface MessageFns<T> {
    encode(message: T, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): T;
    fromJSON(object: any): T;
    toJSON(message: T): unknown;
    create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
    fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
export {};
